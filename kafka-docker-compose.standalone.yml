services:
  zookeeper:
    image: zookeeper:3.7.0
    ports:
      - "2181:2181"
    restart: always
    networks:
      - my-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - my-network
    restart: always
      
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    networks:
      - my-network
    restart: always
    
  oracle:
    image: gvenzl/oracle-xe:21-slim
    #image: gvenzl/oracle-free
    environment:
      ORACLE_PASSWORD: oracle
      ORACLE_DATABASE: orclpdb1
      ORACLE_ALLOW_REMOTE: "true"
    ports:
      - "1521:1521"
    volumes:
      - oracle_data:/opt/oracle/oradata
    networks:
      - my-network
    restart: always
    
#  kafka-connect:
#    image:

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    container_name: keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: keycloak
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: false
      KC_PROXY: edge
    ports:
      - 8080:8080
      - 8443:8443
    depends_on:
      - postgres
    volumes:
      - keycloak_data:/opt/keycloak/data
    command: start-dev
    networks:
      - my-network
    restart: always
    
  redis:
    image: redis:7.0
    container_name: keycloak_redis
    ports:
      - "6379:6379"
    networks:
      - my-network
    restart: always
    
  vault:
    image: vault:1.14.0
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "myroot"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    command: server -dev -dev-root-token-id=myroot
    volumes:
      - vault_data:/vault/file
    networks:
      - my-network
    restart: always
    
#  spring-boot-consumer-app:
#    build:

#  spring-boot-producer-app:
#    build: 

volumes:
  keycloak_data:
  oracle_data:
  vault_data:

networks:
  my-network: